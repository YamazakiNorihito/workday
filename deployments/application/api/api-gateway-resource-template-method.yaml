AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  RestApiId:
    Type: String
  ResourceId:
    Type: String
  HttpMethod:
    Type: String
    AllowedValues:
      - "GET"
      - "POST"
      - "PUT"
      - "PATCH"
      - "DELETE"
  FunctionName:
    Type: String
  LambdaRoleArn:
    Type: String
  CodeS3Bucket:
    Type: String
    Description: "The S3 bucket where the code is stored"
  CodeS3Key:
    Type: String
    Description: "The S3 key where the code is stored"
  OutPutTopicRssArn:
    Type: String
    Default: ""

Resources:
  LambdaStack:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref FunctionName
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Handler: bootstrap
      Role: !Ref LambdaRoleArn
      Timeout: 10
      PackageType: Zip
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref CodeS3Key
      LoggingConfig:
        LogGroup: !Ref LambdaLogGroupStack
      Environment:
        Variables:
          OUTPUT_TOPIC_RSS_ARN: !Ref OutPutTopicRssArn
  LambdaLogGroupStack:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub "/aws/lambda/${FunctionName}"
      RetentionInDays: 1
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaStack
      Principal: "apigateway.amazonaws.com"
  
  Method:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref ResourceId
      HttpMethod: !Ref HttpMethod
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaStack.Arn}/invocations"
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: "{\"statusCode\": 200}"
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: ""
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true

Outputs:
  MethodArn:
    Value: !Ref Method
  LambdaArn:
    Value: !Ref LambdaStack